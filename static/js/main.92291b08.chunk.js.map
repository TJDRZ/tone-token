{"version":3,"sources":["components/Pedalbody.js","components/Pedalboard.js","components/Input.js","components/Menu.js","App.js","index.js"],"names":["Pedalbody","className","draggable","onDragStart","e","dataTransfer","effectAllowed","setData","target","id","onDragOver","preventDefault","dropEffect","onDrop","getData","data","appendChild","document","getElementById","Pedalboard","pedalboardID","useParams","useState","pedals","setPedals","isMounted","useRef","useEffect","current","localStorage","setItem","JSON","stringify","parse","getItem","to","name","onClick","uniqid","concat","Input","props","text","setText","textSet","setTextSet","card","type","placeholder","pattern","onSubmit","lift","htmlFor","required","maxLength","onChange","value","Menu","setCard","cards","setCards","nameChange","setNameChange","newCards","forEach","querySelectorAll","button","classList","toggle","clear","map","filter","App","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.92291b08.chunk.js","sourcesContent":["import \"../styles/Pedalbody.css\";\n\nfunction Pedalbody() {\n  const dragStart = e => {\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('pedalbody', e.target.id);\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const drop = e => {\n    e.preventDefault();\n    if (e.dataTransfer.getData('knob')) {\n      const data = e.dataTransfer.getData('knob');\n      e.target.appendChild(document.getElementById(data));\n    }\n    else if (e.dataTransfer.getData('switch')) {\n      const data = e.dataTransfer.getData('switch');\n      e.target.appendChild(document.getElementById(data));\n    }\n  };\n\n  return (\n    <div className=\"Pedalbody\" draggable onDragStart={dragStart} onDragOver={dragOver} onDrop={drop}>\n    </div>\n  );\n}\n\nexport default Pedalbody;\n","import \"../styles/Pedalboard.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Pedalbody from \"./Pedalbody\";\n\nfunction Pedalboard() {\n  const pedalboardID = useParams();\n  const [pedals, setPedals] = useState([]);\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      localStorage.setItem(`pedalboard-${pedalboardID.id}`, JSON.stringify(pedals));\n    } else {\n      isMounted.current = true;\n    }\n  }, [pedals]);\n\n  const addPedal = () => {\n    const id = uniqid();\n    setPedals(pedals.concat(id));\n  };\n  \n  useEffect(() => {\n    if (localStorage.pedals) {\n      setPedals(JSON.parse(localStorage.getItem(`pedalboard-${pedalboardID}`)));\n    }\n  }, []);\n\n  // const dragOver = e => {\n  //   e.preventDefault();\n  //   e.dataTransfer.dropEffect = 'move';\n  // };\n\n  // const drop = e => {\n  //   e.preventDefault();\n  //   if (e.dataTransfer.getData('pedalbody')) {\n  //     const data = e.dataTransfer.getData('pedalbody');\n  //     e.target.appendChild(document.getElementById(data));\n  //   }\n  // };\n\n  // const deletePedal = id => setPedals(pedals.filter(card => card !== id));\n\n  return (\n    <main className=\"Pedalboard\">\n      <header className=\"header\">\n        <Link to=\"/tone-token\">Click Here to Go Back to Cards</Link>\n        <h1 className=\"title\">{pedalboardID.name}</h1>\n        <button onClick={addPedal}>Add New Pedal</button>\n      </header>\n      {/* <div className=\"Pedalboard\" onDragOver={dragOver} onDrop={drop}>\n        <ul>\n          {pedals.map((pedal) => {\n            return (\n              <li key={pedal}>\n                <Pedalbody />\n                <Link to={`/pedalbody/${pedal}`}>\n                  <button>Open Pedal</button>\n                </Link>\n                <button onClick={() => deletePedal(pedal)}>Delete</button>\n              </li>\n            );\n          })}\n        </ul>\n      </div> */}\n    </main>\n  );\n}\n\nexport default Pedalboard;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Input(props) {\n  const [text, setText] = useState(\"\");\n  const [textSet, setTextSet] = useState(false);\n\n  useEffect(() => {\n    if(props.card.name && props.card.name !== \"newCard\") {\n      setText(props.card.name);\n      setTextSet(true);\n    }\n  }, []);\n\n  const update = (e) => {\n    setText(e.target.value);\n  };\n\n  const submit = () => {\n    setTextSet(true);\n    props.lift([text, props.card.id]); // Lifts text state up after submit\n  };\n\n  const edit = () => {\n    setTextSet(false);\n  };\n\n  const { type, name, placeholder, pattern } = props;\n  return (\n    <div className=\"Input\">\n      {textSet ? (\n        <div>\n          <span>{text} </span>\n          <button onClick={edit}>Edit</button>\n        </div>\n      ) : (\n        <form onSubmit={submit}>\n          <label htmlFor={name}>{name}: </label>\n          <input\n            type={type}\n            name={name}\n            required\n            maxLength=\"10\"\n            placeholder={placeholder}\n            pattern={pattern}\n            onChange={update}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import \"../styles/Menu.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\n\nfunction Menu() {\n  const [card, setCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const isMounted = useRef(false);\n\n  const addNewPedalboard = () => {\n    setCards(cards.concat(card));\n  };\n\n  useEffect(() => {\n    const newCards = cards;\n    newCards.forEach(card => {\n      if (card.id === nameChange[1]) {\n        card.name = nameChange[0];\n      }\n    });\n    setCards(newCards);\n    setCard({ id: uniqid(), name: \"New Pedalboard\" })\n  }, [cards, nameChange]);\n\n  const deletePedalboard = (target) =>\n    setCards(cards.filter((card) => card.id !== target.id));\n\n  const hideDelete = () => {\n    const buttons = document.querySelectorAll('.delete-card');\n    buttons.forEach(button => {\n      button.classList.toggle('hide-delete');\n    });\n  };\n\n  useEffect(() => {\n    if (isMounted.current) {\n      localStorage.setItem(\"cards\", JSON.stringify(cards));\n    } else {\n      isMounted.current = true;\n    }\n  }, [cards, nameChange]);\n\n  useEffect(() => {\n    if (localStorage.cards) {\n      setCards(JSON.parse(localStorage.getItem(\"cards\")));\n    }\n  }, []);\n\n  return (\n    <main className=\"Menu\">\n      <header className=\"header\">\n        <div className=\"card-lock\">\n          <div className=\"outer-lock\" onClick={hideDelete}><div className=\"inner-lock\"></div></div>\n          <p>Card Lock</p>\n        </div>\n        <h1 className=\"title\">Tone Token</h1>\n        <div className=\"header-buttons\">\n          <button className=\"new-pedalboard\" onClick={addNewPedalboard}>New Pedalboard</button>\n          <button className=\"clear-storage\" onClick={() => localStorage.clear()}>Clear Storage</button>\n        </div>\n      </header>\n      <ul className=\"card-container\">\n        {cards.map(card => {\n          return (\n            <li className=\"card\" key={card.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedalboard Name\"}\n                  placeholder=\"Enter a pedalboard name\"\n                  lift={setNameChange}\n                  card={card}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalboard/${card.id}/${card.name}`}>\n                  <button>Open Pedalboard</button>\n                </Link>\n                <button className=\"delete-card\" onClick={() => deletePedalboard(card)}>Delete</button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Menu;\n","import { Routes, Route } from \"react-router-dom\";\nimport Pedalboard from \"./components/Pedalboard\";\nimport Pedalbody from \"./components/Pedalbody\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/tone-token\" element={<Menu />} />\n        <Route path=\"/pedalboard/:id/:name\" element={<Pedalboard />} />\n        <Route path=\"/pedalbody/:id\" element={<Pedalbody />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./styles/reset.css\";\nimport \"./styles/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}