{"version":3,"sources":["components/Input.js","components/Knob.js","components/Flicker.js","components/Pedalbody.js","components/Pedalboard.js","components/Menu.js","App.js","index.js"],"names":["Input","props","useState","text","setText","textSet","setTextSet","useEffect","card","name","type","placeholder","pattern","className","onClick","onSubmit","lift","id","htmlFor","required","maxLength","onChange","e","target","value","Knob","Flicker","Pedalbody","pedalbodyID","useParams","knob","setKnob","knobs","setKnobs","knobNameChange","setKnobNameChange","flicker","setFlicker","flickers","setFlickers","flickerNameChange","setFlickerNameChange","pedalbodyMounted","useRef","newKnobs","forEach","uniqid","newFlickers","current","localStorage","setItem","JSON","stringify","getItem","parse","to","concat","map","filter","Pedalboard","pedalboardID","pedal","setPedal","pedals","setPedals","nameChange","setNameChange","pedalboardMounted","newPedals","Menu","setCard","cards","setCards","menuMounted","newCards","document","querySelectorAll","button","classList","toggle","clear","App","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1884b043.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Input(props) {\n  const [text, setText] = useState(\"\");\n  const [textSet, setTextSet] = useState(false);\n\n  useEffect(() => {\n    if (props.card) {\n      setText(props.card.name);\n      setTextSet(true);\n    }\n  }, []);\n\n  const update = (e) => {\n    setText(e.target.value);\n  };\n\n  const submit = () => {\n    setTextSet(true);\n    props.lift([text, props.card.id]); // Lifts text state up after submit\n  };\n\n  const edit = () => {\n    setTextSet(false);\n  };\n\n  const { type, name, placeholder, pattern } = props;\n  return (\n    <div className=\"Input\">\n      {textSet ? (\n        <div>\n          <span>{text} </span>\n          <button onClick={edit}>Edit</button>\n        </div>\n      ) : (\n        <form onSubmit={submit}>\n          <label htmlFor={name}>{name}: </label>\n          <input\n            type={type}\n            name={name}\n            required\n            maxLength=\"10\"\n            placeholder={placeholder}\n            pattern={pattern}\n            onChange={update}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import \"../styles/Knob.css\";\nimport Input from \"./Input\";\n\nfunction Knob() {\n  return (\n    <div className=\"Knob\">\n      <Input\n        type=\"range\"\n      />\n    </div>\n  );\n}\n\nexport default Knob;\n","import \"../styles/Flicker.css\";\nimport Input from \"./Input\";\n\nfunction Flicker() {\n  return (\n    <div className=\"Flicker\">\n      <Input\n        type=\"checkbox\"\n      />\n    </div>\n  );\n}\n\nexport default Flicker;","import \"../styles/Pedalbody.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\nimport Knob from \"./Knob\";\nimport Flicker from \"./Flicker\";\n\nfunction Pedalbody() {\n  const pedalbodyID = useParams();\n  const [knob, setKnob] = useState({});\n  const [knobs, setKnobs] = useState([]);\n  const [knobNameChange, setKnobNameChange] = useState([]);\n  const [flicker, setFlicker] = useState({}); // Switch is a reserved word\n  const [flickers, setFlickers] = useState([]); // You know what I meant\n  const [flickerNameChange, setFlickerNameChange] = useState([]);\n  const pedalbodyMounted = useRef(false);\n\n  // Creation\n  const addNewKnob = () => {\n    setKnobs(knobs.concat(knob));\n  };\n\n  const addNewFlicker = () => {\n    setFlickers(flickers.concat(flicker));\n  };\n\n  // Name Change\n  useEffect(() => {\n    // Knob\n    const newKnobs = knobs;\n    newKnobs.forEach((knob) => {\n      if (knob.id === knobNameChange[1]) {\n        knob.name = knobNameChange[0];\n      }\n    });\n    setKnobs(newKnobs);\n    setKnob({ id: uniqid(), name: \"New Knob\" });\n\n    //Flicker\n    const newFlickers = flickers;\n    newFlickers.forEach((flicker) => {\n      if (flicker.id === flickerNameChange[1]) {\n        flicker.name = flickerNameChange[0];\n      }\n    });\n    setFlickers(newFlickers);\n    setFlicker({ id: uniqid(), name: \"New Switch\" });\n  }, [knobs, flickers, knobNameChange, flickerNameChange]);\n\n  // Deletion\n  const deleteKnob = (target) =>\n    setKnob(knobs.filter((knob) => knob.id !== target.id));\n  const deleteFlicker = (target) =>\n    setFlicker(flickers.filter((flicker) => flicker.id !== target.id));\n\n  // Set localStorage\n  useEffect(() => {\n    if (pedalbodyMounted.current) {\n      localStorage.setItem(`${pedalbodyID.id}knobs`, JSON.stringify(knobs));\n      localStorage.setItem(\n        `${pedalbodyID.id}flickers`,\n        JSON.stringify(flickers)\n      );\n    } else {\n      pedalbodyMounted.current = true;\n    }\n  }, [knobs, flickers, knobNameChange, flickerNameChange, pedalbodyID]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.getItem(`${pedalbodyID.id}`) !== null) {\n      setKnobs(JSON.parse(localStorage.getItem(`${pedalbodyID.id}knobs`)));\n      setFlickers(\n        JSON.parse(localStorage.getItem(`${pedalbodyID.id}flickers`))\n      );\n    }\n  }, []);\n\n  return (\n    <main className=\"Pedalbody\">\n      <header className=\"header\">\n        <Link to={\"/tone-token\"}>Click Here to Go Back to Pedalboards</Link>\n        <h1 className=\"title\">{pedalbodyID.name}</h1>\n        <button onClick={addNewKnob}>Add New Knob</button>\n        <button onClick={addNewFlicker}>Add New Switch</button>\n      </header>\n      <div className=\"case\">\n        {knobs.map((knob) => {\n          return (\n            <div className=\"knob\" key={knob.id}>\n              <Knob />\n              <Input\n                type=\"text\"\n                name={\"Knob Name\"}\n                placeholder=\"Enter a knob name\"\n                lift={setKnobNameChange}\n                card={knob}\n              />\n              <button className=\"delete-knob\" onClick={() => deleteKnob(knob)}>\n                Delete\n              </button>\n            </div>\n          );\n        })}\n        {flickers.map((flicker) => {\n          return (\n            <div className=\"flicker\" key={flicker.id}>\n              <Flicker />\n              <Input\n                type=\"text\"\n                name={\"Switch Name\"}\n                placeholder=\"Enter a switch name\"\n                lift={setFlickerNameChange}\n                card={flicker}\n              />\n              <button\n                className=\"delete-flicker\"\n                onClick={() => deleteFlicker(flicker)}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </main>\n  );\n}\n\nexport default Pedalbody;\n","import \"../styles/Pedalboard.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\nimport Pedalbody from \"./Pedalbody\";\n\nfunction Pedalboard() {\n  const pedalboardID = useParams();\n  const [pedal, setPedal] = useState({});\n  const [pedals, setPedals] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const pedalboardMounted = useRef(false);\n\n  // Creation\n  const addNewPedal = () => {\n    setPedals(pedals.concat(pedal));\n  };\n\n  // Name Change\n  useEffect(() => {\n    const newPedals = pedals;\n    newPedals.forEach((pedal) => {\n      if (pedal.id === nameChange[1]) {\n        pedal.name = nameChange[0];\n      }\n    });\n    setPedals(newPedals);\n    setPedal({ id: uniqid(), name: \"New Pedal\" });\n  }, [pedals, nameChange]);\n\n  // Deletion\n  const deletePedal = (target) =>\n    setPedal(pedals.filter((pedal) => pedal.id !== target.id));\n\n  // Set localStorage\n  useEffect(() => {\n    if (pedalboardMounted.current) {\n      localStorage.setItem(`${pedalboardID.id}`, JSON.stringify(pedals));\n    } else {\n      pedalboardMounted.current = true;\n    }\n  }, [pedals, nameChange, pedalboardID]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.getItem(`${pedalboardID.id}`) !== null) {\n      setPedals(JSON.parse(localStorage.getItem(`${pedalboardID.id}`)));\n    }\n  }, []);\n\n  return (\n    <main className=\"Pedalboard\">\n      <header className=\"header\">\n        <Link to=\"/tone-token\">Click Here to Go Back to Pedalboards</Link>\n        <h1 className=\"title\">{pedalboardID.name}</h1>\n        <button onClick={addNewPedal}>Add New Pedal</button>\n      </header>\n      <ul className=\"card-container\">\n        {pedals.map((pedal) => {\n          return (\n            <li className=\"card\" key={pedal.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedal Name\"}\n                  placeholder=\"Enter a pedal name\"\n                  lift={setNameChange}\n                  card={pedal}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalbody/${pedal.id}/${pedal.name}`}>\n                  <button>Open Pedal</button>\n                </Link>\n                <button\n                  className=\"delete-card\"\n                  onClick={() => deletePedal(pedal)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Pedalboard;\n","import \"../styles/Menu.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\n\nfunction Menu() {\n  const [card, setCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const menuMounted = useRef(false);\n\n  // Creation\n  const addNewPedalboard = () => {\n    setCards(cards.concat(card));\n  };\n\n  // Name Change\n  useEffect(() => {\n    const newCards = cards;\n    newCards.forEach((card) => {\n      if (card.id === nameChange[1]) {\n        card.name = nameChange[0];\n      }\n    });\n    setCards(newCards);\n    setCard({ id: uniqid(), name: \"New Pedalboard\" });\n  }, [cards, nameChange]);\n\n  // Deletion\n  const deletePedalboard = (target) =>\n    setCards(cards.filter((card) => card.id !== target.id));\n\n  // Lock Delete\n  const hideDelete = () => {\n    const buttons = document.querySelectorAll(\".delete-card\");\n    buttons.forEach((button) => {\n      button.classList.toggle(\"hide-delete\");\n    });\n  };\n\n  // Set localStorage\n  useEffect(() => {\n    if (menuMounted.current) {\n      localStorage.setItem(\"cards\", JSON.stringify(cards));\n    } else {\n      menuMounted.current = true;\n    }\n  }, [cards, nameChange]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.cards) {\n      setCards(JSON.parse(localStorage.getItem(\"cards\")));\n    }\n  }, []);\n\n  return (\n    <main className=\"Menu\">\n      <header className=\"header\">\n        <div className=\"card-lock\">\n          <div className=\"outer-lock\" onClick={hideDelete}>\n            <div className=\"inner-lock\"></div>\n          </div>\n          <p>Card Lock</p>\n        </div>\n        <h1 className=\"title\">Tone Token</h1>\n        <div className=\"header-buttons\">\n          <button className=\"new-pedalboard\" onClick={addNewPedalboard}>\n            New Pedalboard\n          </button>\n          <button\n            className=\"clear-storage\"\n            onClick={() => localStorage.clear()}\n          >\n            Clear Storage\n          </button>\n        </div>\n      </header>\n      <ul className=\"card-container\">\n        {cards.map((card) => {\n          return (\n            <li className=\"card\" key={card.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedalboard Name\"}\n                  placeholder=\"Enter a pedalboard name\"\n                  lift={setNameChange}\n                  card={card}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalboard/${card.id}/${card.name}`}>\n                  <button>Open Pedalboard</button>\n                </Link>\n                <button\n                  className=\"delete-card\"\n                  onClick={() => deletePedalboard(card)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Menu;\n","import { Routes, Route } from \"react-router-dom\";\nimport Pedalboard from \"./components/Pedalboard\";\nimport Pedalbody from \"./components/Pedalbody\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/tone-token\" element={<Menu />} />\n        <Route path=\"/pedalboard/:id/:name\" element={<Pedalboard />} />\n        <Route path=\"/pedalbody/:id/:name\" element={<Pedalbody />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./styles/reset.css\";\nimport \"./styles/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}