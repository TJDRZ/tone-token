{"version":3,"sources":["components/Input.js","components/Knob.js","components/Flicker.js","components/Pedalbody.js","components/Pedalboard.js","components/Menu.js","App.js","index.js"],"names":["Input","props","useState","text","setText","textSet","setTextSet","useEffect","card","name","type","placeholder","pattern","className","onClick","onSubmit","lift","id","htmlFor","required","maxLength","onChange","e","target","value","Knob","Flicker","Pedalbody","pedalbodyID","useParams","knob","setKnob","knobs","setKnobs","knobNameChange","setKnobNameChange","flicker","setFlicker","flickers","setFlickers","flickerNameChange","setFlickerNameChange","pedalbodyMounted","useRef","newKnobs","forEach","uniqid","status","newFlickers","current","localStorage","setItem","JSON","stringify","getItem","parse","to","concat","map","cardLock","filter","Pedalboard","pedalboardID","pedal","setPedal","pedals","setPedals","nameChange","setNameChange","pedalboardMounted","newPedals","Menu","setCard","cards","setCards","menuMounted","newCards","about","document","querySelector","slide","ham","bur","ger","author","title","classList","contains","style","transform","opacity","color","toggle","href","buttons","querySelectorAll","button","clear","App","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c59bea64.chunk.js","sourcesContent":["import \"../styles/Input.css\"\nimport React, { useState, useEffect } from \"react\";\n\nfunction Input(props) {\n  const [text, setText] = useState(\"\");\n  const [textSet, setTextSet] = useState(false);\n\n  useEffect(() => {\n    setText(props.card.name);\n    setTextSet(true);\n  }, []);\n\n  const update = (e) => {\n    setText(e.target.value);\n  };\n\n  const submit = () => {\n    setTextSet(true);\n    props.lift([text, props.card.id]); // Lifts text state up after submit\n  };\n\n  const edit = () => {\n    setTextSet(false);\n  };\n\n  const { type, name, placeholder, pattern } = props;\n  return (\n    <div className=\"Input\">\n      {textSet ? (\n        <div>\n          <span>{text} </span>\n          <button onClick={edit}>Edit</button>\n        </div>\n      ) : (\n        <form onSubmit={submit}>\n          <label htmlFor={name}>{name}: </label>\n          <input\n            type={type}\n            name={name}\n            required\n            maxLength=\"10\"\n            placeholder={placeholder}\n            pattern={pattern}\n            onChange={update}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import \"../styles/Knob.css\";\n\nfunction Knob() {\n  return (\n    <div className=\"Knob\">\n      <div className=\"notch\"></div>\n    </div>\n  );\n}\n\nexport default Knob;\n","import \"../styles/Flicker.css\";\n\nfunction Flicker() {\n  return (\n    <div className=\"Flicker\">\n    </div>\n  );\n}\n\nexport default Flicker;","import \"../styles/Pedalbody.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\nimport Knob from \"./Knob\";\nimport Flicker from \"./Flicker\";\n\nfunction Pedalbody() {\n  const pedalbodyID = useParams();\n  const [knob, setKnob] = useState({});\n  const [knobs, setKnobs] = useState([]);\n  const [knobNameChange, setKnobNameChange] = useState([]);\n  const [flicker, setFlicker] = useState({}); // Switch is a reserved word\n  const [flickers, setFlickers] = useState([]); // You know what I meant\n  const [flickerNameChange, setFlickerNameChange] = useState([]);\n  const pedalbodyMounted = useRef(false);\n\n  // Creation\n  const addNewKnob = () => setKnobs(knobs.concat(knob));\n  const addNewFlicker = () => setFlickers(flickers.concat(flicker));\n\n  // Name Change\n  useEffect(() => {\n    // Knob\n    const newKnobs = knobs;\n    newKnobs.forEach((knob) => {\n      if (knob.id === knobNameChange[1]) {\n        knob.name = knobNameChange[0];\n      }\n    });\n    setKnobs(newKnobs);\n    setKnob({ id: uniqid(), name: \"New Knob\", status: null });\n\n    //Flicker\n    const newFlickers = flickers;\n    newFlickers.forEach((flicker) => {\n      if (flicker.id === flickerNameChange[1]) {\n        flicker.name = flickerNameChange[0];\n      }\n    });\n    setFlickers(newFlickers);\n    setFlicker({ id: uniqid(), name: \"New Switch\", status: false });\n  }, [knobs, flickers, knobNameChange, flickerNameChange]);\n\n  // Deletion\n  const deleteKnob = (target) => {\n    setKnobs(knobs.filter((knob) => knob.id !== target.id));\n  };\n  const deleteFlicker = (target) => {\n    setFlickers(flickers.filter((flicker) => flicker.id !== target.id));\n  };\n\n  // Set localStorage\n  useEffect(() => {\n    if (pedalbodyMounted.current) {\n      localStorage.setItem(`${pedalbodyID.id}knobs`, JSON.stringify(knobs));\n      localStorage.setItem(\n        `${pedalbodyID.id}flickers`,\n        JSON.stringify(flickers)\n      );\n    } else {\n      pedalbodyMounted.current = true;\n    }\n  }, [knobs, flickers, knobNameChange, flickerNameChange, pedalbodyID]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.getItem(`${pedalbodyID.id}knobs`) !== null) {\n      setKnobs(JSON.parse(localStorage.getItem(`${pedalbodyID.id}knobs`)));\n    }\n    if (localStorage.getItem(`${pedalbodyID.id}flickers`) !== null) {\n      setFlickers(\n        JSON.parse(localStorage.getItem(`${pedalbodyID.id}flickers`))\n      );\n    }\n  }, []);\n\n  return (\n    <main className=\"Pedalbody\">\n      <header className=\"header\">\n        <Link to={\"/tone-token\"}>Click Here to Go Back to Pedalboards</Link>\n        <h1 className=\"title\">{pedalbodyID.name}</h1>\n        <p>Under Construction: knobs and switches incomplete</p>\n        <div className=\"header-buttons\">\n          <button onClick={addNewKnob}>Add New Knob</button>\n          <button onClick={addNewFlicker}>Add New Switch</button>\n        </div>\n      </header>\n      <ul className=\"card-container\">\n        {knobs.map((knob) => {\n          return (\n            <li className=\"card\" key={knob.id}>\n              <Knob />\n              <Input\n                type=\"text\"\n                name={\"Knob Name\"}\n                placeholder=\"Enter a knob name\"\n                lift={setKnobNameChange}\n                card={knob}\n              />\n              <button\n                className={`delete-card ${\n                  localStorage.cardLock === \"true\" ? \"hide-delete\" : 0\n                }`}\n                onClick={() => deleteKnob(knob)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n        {flickers.map((flicker) => {\n          return (\n            <li className=\"card\" key={flicker.id}>\n              <Flicker />\n              <Input\n                type=\"text\"\n                name={\"Switch Name\"}\n                placeholder=\"Enter a switch name\"\n                lift={setFlickerNameChange}\n                card={flicker}\n              />\n              <button\n                className={`delete-card ${\n                  localStorage.cardLock === \"true\" ? \"hide-delete\" : 0\n                }`}\n                onClick={() => deleteFlicker(flicker)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Pedalbody;\n","import \"../styles/Pedalboard.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\nimport Pedalbody from \"./Pedalbody\";\n\nfunction Pedalboard() {\n  const pedalboardID = useParams();\n  const [pedal, setPedal] = useState({});\n  const [pedals, setPedals] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const pedalboardMounted = useRef(false);\n\n  // Creation\n  const addNewPedal = () => {\n    setPedals(pedals.concat(pedal));\n  };\n\n  // Name Change\n  useEffect(() => {\n    const newPedals = pedals;\n    newPedals.forEach((pedal) => {\n      if (pedal.id === nameChange[1]) {\n        pedal.name = nameChange[0];\n      }\n    });\n    setPedals(newPedals);\n    setPedal({ id: uniqid(), name: \"New Pedal\" });\n  }, [pedals, nameChange]);\n\n  // Deletion\n  const deletePedal = (target) =>\n    setPedals(pedals.filter((pedal) => pedal.id !== target.id));\n\n  // Set localStorage\n  useEffect(() => {\n    if (pedalboardMounted.current) {\n      localStorage.setItem(`${pedalboardID.id}`, JSON.stringify(pedals));\n    } else {\n      pedalboardMounted.current = true;\n    }\n  }, [pedals, nameChange, pedalboardID]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.getItem(`${pedalboardID.id}`) !== null) {\n      setPedals(JSON.parse(localStorage.getItem(`${pedalboardID.id}`)));\n    }\n  }, []);\n\n  return (\n    <main className=\"Pedalboard\">\n      <header className=\"header\">\n        <Link to=\"/tone-token\">Click Here to Go Back to Pedalboards</Link>\n        <h1 className=\"title\">{pedalboardID.name}</h1>\n        <div className=\"header-buttons\">\n          <button onClick={addNewPedal}>Add New Pedal</button>\n        </div>\n      </header>\n      <ul className=\"card-container\">\n        {pedals.map((pedal) => {\n          return (\n            <li className=\"card\" key={pedal.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedal Name\"}\n                  placeholder=\"Enter a pedal name\"\n                  lift={setNameChange}\n                  card={pedal}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalbody/${pedal.id}/${pedal.name}`}>\n                  <button>Open Pedal</button>\n                </Link>\n                <button\n                  className={`delete-card ${\n                    localStorage.cardLock === \"true\" ? \"hide-delete\" : 0\n                  }`}\n                  onClick={() => deletePedal(pedal)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Pedalboard;\n","import \"../styles/Menu.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\n\nfunction Menu() {\n  const [card, setCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const menuMounted = useRef(false);\n\n  // About\n  const info = () => {\n    const about = document.querySelector(\".about\");\n    const slide = document.querySelector(\".slide\");\n    const ham = document.querySelector(\".ham\");\n    const bur = document.querySelector(\".bur\");\n    const ger = document.querySelector(\".ger\");\n    const author = document.querySelector(\".author\");\n    const title = document.querySelector(\".title\");\n\n    if (about.classList.contains(\"closed\")) {\n      ham.style.transform = \"rotate(45deg) translate(22.5%, 100%)\";\n      bur.style.opacity = \"0\";\n      ger.style.transform = \"rotate(-45deg) translate(22.5%, -100%)\";\n      slide.style.transform = \"translateX(100%)\";\n      author.style.color = \"#fada5e\";\n      title.style.color = \"#fada5e\";\n      about.classList.toggle(\"closed\");\n    } else {\n      ham.style.transform = \"rotate(0) translate(0)\";\n      bur.style.opacity = \"1\";\n      ger.style.transform = \"rotate(0) translate(0)\";\n      slide.style.transform = \"translateX(-100%)\";\n      author.style.color = \"#000\";\n      title.style.color = \"#000\";\n      about.classList.toggle(\"closed\");\n    }\n  };\n\n  // Creation\n  const addNewPedalboard = () => {\n    setCards(cards.concat(card));\n  };\n\n  // Name Change\n  useEffect(() => {\n    const newCards = cards;\n    newCards.forEach((card) => {\n      if (card.id === nameChange[1]) {\n        card.name = nameChange[0];\n      }\n    });\n    setCards(newCards);\n    setCard({ id: uniqid(), name: \"New Pedalboard\" });\n  }, [cards, nameChange]);\n\n  // Deletion\n  const deletePedalboard = (target) =>\n    setCards(cards.filter((card) => card.id !== target.id));\n\n  // Lock Delete\n  const hideDelete = () => {\n    const buttons = document.querySelectorAll(\".delete-card\");\n    buttons.forEach((button) => {\n      button.classList.toggle(\"hide-delete\");\n    });\n    if (buttons[0] && buttons[0].classList.contains(\"hide-delete\")) {\n      localStorage.setItem(\"cardLock\", \"true\");\n    } else {\n      localStorage.setItem(\"cardLock\", \"false\");\n    }\n  };\n\n  // Set localStorage\n  useEffect(() => {\n    if (menuMounted.current) {\n      localStorage.setItem(\"cards\", JSON.stringify(cards));\n    } else {\n      menuMounted.current = true;\n    }\n  }, [cards, nameChange]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.cards) {\n      setCards(JSON.parse(localStorage.getItem(\"cards\")));\n    }\n  }, []);\n\n  return (\n    <main className=\"Menu\">\n      <header className=\"header\">\n        <div className=\"about closed\" onClick={info}>\n          <div className=\"ham\"></div>\n          <div className=\"bur\"></div>\n          <div className=\"ger\"></div>\n        </div>\n        <div className=\"slide\">\n          <p>-Tired of forgetting where your knobs and switches were set as you change styles of music? How about what pedals you used to achieve that specific sound? ...Tone Token helps solve that problem</p>\n          <p>-Create pedalboards, pedals inside them, and knobs and switches inside them! Click edit to edit the name for anything. Click on the Card Lock Token at the top of the main menu page to hid all 'Delete' buttons to prevent unhappy accidents. Clear storage on the main menu screen to wipe it all and erase the local storage from your browser.</p>\n          <p>-Only saves to your browser's local storage at the moment, so no cross-device accounts available yet. This is a Front-end Development project.</p>\n          <p>-Enjoy!</p>\n          <p><a className=\"website\" href=\"https://tjdrz.com\">https://tjdrz.com</a></p>\n        </div>\n        <div className=\"card-lock\">\n          <div className=\"outer-lock\" onClick={hideDelete}>\n            <div className=\"inner-lock\"></div>\n          </div>\n          <p>Card Lock</p>\n        </div>\n        <h2 className=\"author\">TJDRZ's</h2>\n        <h1 className=\"title\">Tone Token</h1>\n        <div className=\"header-buttons\">\n          <button className=\"new-pedalboard\" onClick={addNewPedalboard}>\n            New Pedalboard\n          </button>\n          <button\n            className=\"clear-storage\"\n            onClick={() => localStorage.clear()}\n          >\n            Clear Storage\n          </button>\n        </div>\n      </header>\n      <ul className=\"card-container\">\n        {cards.map((card) => {\n          return (\n            <li className=\"card\" key={card.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedalboard Name\"}\n                  placeholder=\"Enter a pedalboard name\"\n                  lift={setNameChange}\n                  card={card}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalboard/${card.id}/${card.name}`}>\n                  <button>Open Pedalboard</button>\n                </Link>\n                <button\n                  className={`delete-card ${\n                    localStorage.cardLock === \"true\" ? \"hide-delete\" : 0\n                  }`}\n                  onClick={() => deletePedalboard(card)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Menu;\n","import { Routes, Route } from \"react-router-dom\";\nimport Pedalboard from \"./components/Pedalboard\";\nimport Pedalbody from \"./components/Pedalbody\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/tone-token\" element={<Menu />} />\n        <Route path=\"/pedalboard/:id/:name\" element={<Pedalboard />} />\n        <Route path=\"/pedalbody/:id/:name\" element={<Pedalbody />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./styles/reset.css\";\nimport \"./styles/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}