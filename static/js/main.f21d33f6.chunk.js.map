{"version":3,"sources":["components/Input.js","components/Pedalbody.js","components/Pedalboard.js","components/Menu.js","App.js","index.js"],"names":["Input","props","useState","text","setText","textSet","setTextSet","useEffect","card","name","type","placeholder","pattern","className","onClick","onSubmit","lift","id","htmlFor","required","maxLength","onChange","e","target","value","Pedalbody","draggable","onDragStart","dataTransfer","effectAllowed","setData","onDragOver","preventDefault","dropEffect","onDrop","getData","data","appendChild","document","getElementById","Pedalboard","pedalboardID","useParams","pedal","setPedal","pedals","setPedals","nameChange","setNameChange","pedalboardMounted","useRef","newPedals","forEach","uniqid","current","localStorage","setItem","JSON","stringify","getItem","parse","to","concat","map","filter","Menu","setCard","cards","setCards","menuMounted","newCards","querySelectorAll","button","classList","toggle","clear","App","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.f21d33f6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Input(props) {\n  const [text, setText] = useState(\"\");\n  const [textSet, setTextSet] = useState(false);\n\n  useEffect(() => {\n    setText(props.card.name);\n    setTextSet(true);\n  }, []);\n\n  const update = (e) => {\n    setText(e.target.value);\n  };\n\n  const submit = () => {\n    setTextSet(true);\n    props.lift([text, props.card.id]); // Lifts text state up after submit\n  };\n\n  const edit = () => {\n    setTextSet(false);\n  };\n\n  const { type, name, placeholder, pattern } = props;\n  return (\n    <div className=\"Input\">\n      {textSet ? (\n        <div>\n          <span>{text} </span>\n          <button onClick={edit}>Edit</button>\n        </div>\n      ) : (\n        <form onSubmit={submit}>\n          <label htmlFor={name}>{name}: </label>\n          <input\n            type={type}\n            name={name}\n            required\n            maxLength=\"10\"\n            placeholder={placeholder}\n            pattern={pattern}\n            onChange={update}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Input;\n","import \"../styles/Pedalbody.css\";\n\nfunction Pedalbody() {\n  const dragStart = e => {\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('pedalbody', e.target.id);\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const drop = e => {\n    e.preventDefault();\n    if (e.dataTransfer.getData('knob')) {\n      const data = e.dataTransfer.getData('knob');\n      e.target.appendChild(document.getElementById(data));\n    }\n    else if (e.dataTransfer.getData('switch')) {\n      const data = e.dataTransfer.getData('switch');\n      e.target.appendChild(document.getElementById(data));\n    }\n  };\n\n  return (\n    <div className=\"Pedalbody\" draggable onDragStart={dragStart} onDragOver={dragOver} onDrop={drop}>\n    </div>\n  );\n}\n\nexport default Pedalbody;\n","import \"../styles/Pedalboard.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\nimport Pedalbody from \"./Pedalbody\";\n\nfunction Pedalboard() {\n  const pedalboardID = useParams();\n  const [pedal, setPedal] = useState({});\n  const [pedals, setPedals] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const pedalboardMounted = useRef(false);\n\n  // Creation\n  const addNewPedal = () => {\n    setPedals(pedals.concat(pedal));\n  };\n\n  // Name Change\n  useEffect(() => {\n    const newPedals = pedals;\n    newPedals.forEach((pedal) => {\n      if (pedal.id === nameChange[1]) {\n        pedal.name = nameChange[0];\n      }\n    });\n    setPedals(newPedals);\n    setPedal({ id: uniqid(), name: \"New Pedal\" });\n  }, [pedals, nameChange]);\n\n  // Deletion\n  const deletePedal = (target) =>\n    setPedal(pedals.filter((pedal) => pedal.id !== target.id));\n\n  // Set localStorage\n  useEffect(() => {\n    if (pedalboardMounted.current) {\n      localStorage.setItem(`${pedalboardID.id}`, JSON.stringify(pedals));\n    } else {\n      pedalboardMounted.current = true;\n    }\n  }, [pedals, nameChange]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.getItem(`${pedalboardID.id}`) !== null) {\n      setPedals(JSON.parse(localStorage.getItem(`${pedalboardID.id}`)));\n    }\n  }, []);\n\n  return (\n    <main className=\"Pedalboard\">\n      <header className=\"header\">\n        <Link to=\"/tone-token\">Click Here to Go Back to Pedalboards</Link>\n        <h1 className=\"title\">{pedalboardID.name}</h1>\n        <button onClick={addNewPedal}>Add New Pedal</button>\n      </header>\n      <ul className=\"card-container\">\n        {pedals.map((pedal) => {\n          return (\n            <li className=\"card\" key={pedal.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedal Name\"}\n                  placeholder=\"Enter a pedal name\"\n                  lift={setNameChange}\n                  card={pedal}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalbody/${pedal.id}/${pedal.name}`}>\n                  <button>Open Pedal</button>\n                </Link>\n                <button\n                  className=\"delete-card\"\n                  onClick={() => deletePedal(pedal)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Pedalboard;\n","import \"../styles/Menu.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport uniqid from \"uniqid\";\nimport Input from \"./Input\";\n\nfunction Menu() {\n  const [card, setCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [nameChange, setNameChange] = useState([]);\n  const menuMounted = useRef(false);\n\n  // Creation\n  const addNewPedalboard = () => {\n    setCards(cards.concat(card));\n  };\n\n  // Name Change\n  useEffect(() => {\n    const newCards = cards;\n    newCards.forEach((card) => {\n      if (card.id === nameChange[1]) {\n        card.name = nameChange[0];\n      }\n    });\n    setCards(newCards);\n    setCard({ id: uniqid(), name: \"New Pedalboard\" });\n  }, [cards, nameChange]);\n\n  // Deletion\n  const deletePedalboard = (target) =>\n    setCards(cards.filter((card) => card.id !== target.id));\n\n  // Lock Delete\n  const hideDelete = () => {\n    const buttons = document.querySelectorAll(\".delete-card\");\n    buttons.forEach((button) => {\n      button.classList.toggle(\"hide-delete\");\n    });\n  };\n\n  // Set localStorage\n  useEffect(() => {\n    if (menuMounted.current) {\n      localStorage.setItem(\"cards\", JSON.stringify(cards));\n    } else {\n      menuMounted.current = true;\n    }\n  }, [cards, nameChange]);\n\n  // Load localStorage\n  useEffect(() => {\n    if (localStorage.cards) {\n      setCards(JSON.parse(localStorage.getItem(\"cards\")));\n    }\n  }, []);\n\n  return (\n    <main className=\"Menu\">\n      <header className=\"header\">\n        <div className=\"card-lock\">\n          <div className=\"outer-lock\" onClick={hideDelete}>\n            <div className=\"inner-lock\"></div>\n          </div>\n          <p>Card Lock</p>\n        </div>\n        <h1 className=\"title\">Tone Token</h1>\n        <div className=\"header-buttons\">\n          <button className=\"new-pedalboard\" onClick={addNewPedalboard}>\n            New Pedalboard\n          </button>\n          <button\n            className=\"clear-storage\"\n            onClick={() => localStorage.clear()}\n          >\n            Clear Storage\n          </button>\n        </div>\n      </header>\n      <ul className=\"card-container\">\n        {cards.map((card) => {\n          return (\n            <li className=\"card\" key={card.id}>\n              <div className=\"card-name\">\n                <Input\n                  type=\"text\"\n                  name={\"Pedalboard Name\"}\n                  placeholder=\"Enter a pedalboard name\"\n                  lift={setNameChange}\n                  card={card}\n                />\n              </div>\n              <div className=\"card-buttons\">\n                <Link to={`/pedalboard/${card.id}/${card.name}`}>\n                  <button>Open Pedalboard</button>\n                </Link>\n                <button\n                  className=\"delete-card\"\n                  onClick={() => deletePedalboard(card)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\n\nexport default Menu;\n","import { Routes, Route } from \"react-router-dom\";\nimport Pedalboard from \"./components/Pedalboard\";\nimport Pedalbody from \"./components/Pedalbody\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/tone-token\" element={<Menu />} />\n        <Route path=\"/pedalboard/:id/:name\" element={<Pedalboard />} />\n        <Route path=\"/pedalbody/:id/:name\" element={<Pedalbody />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import \"./styles/reset.css\";\nimport \"./styles/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}